import { useMutation } from '@tanstack/react-query';
import { authStorage } from 'shared/api';
import { createUserFromRegistration } from 'shared/lib/user-utils';
import { useAuthStore } from 'shared/store/auth';
import { authApi, RegisterRequest } from './authApi';

export function useRegisterMutation() {
  const login = useAuthStore(state => state.login);

  return useMutation({
    mutationFn: async (data: RegisterRequest) => {
      // 1. –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      await authApi.register(data);

      // 2. –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ª–æ–≥–∏–Ω–∏–º
      const loginResponse = await authApi.login({
        username: data.username,
        password: data.password,
      });

      return { loginResponse, userData: data };
    },
    onSuccess: ({ loginResponse, userData }) => {
      console.log('üîç Login response:', loginResponse);

      // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–æ–∫–µ–Ω—ã
      authStorage.setTokens({
        authToken: loginResponse.token,
        refreshToken: loginResponse.refreshToken,
      });

      // –û–±–Ω–æ–≤–ª—è–µ–º auth store
      const user = createUserFromRegistration(userData);
      login(user);

      console.log('‚úÖ Tokens saved and user logged in!');
    },
  });
}
